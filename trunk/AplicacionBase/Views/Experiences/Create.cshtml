@model AplicacionBase.Models.Experience

@{
    ViewBag.Title = "Agregar experiencia laboral";
    var wizard = ViewBag.WizardStep;
    if(wizard ==1)
    {
        Layout = "~/Views/Shared/_LayoutW.cshtml";
        wizard = 1;
    }
    }

<h1>Agregar experiencia laboral</h1>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Información Requerida</legend>
         <p>(*) Campos Obligatorios</p>
         <div class="editor-label">
            Compañía donde laboró (*)
        </div>
        <input type="hidden" name="wizard" id="wizard" value="@ViewBag.WizardStep"/>
        <div class="editor-field">
            @Html.DropDownList("IdCompanie", "")
            @Html.ValidationMessageFor(model => model.IdCompanie)

            ¿No aparece en la lista? &nbsp @Html.ActionLink("Crear Nueva", "CreateForExperience", "Companies", new { wizardStep = wizard }, htmlAttributes: new { @class = "ebutton blue" })
            
        </div>

        <div class="editor-label">
            Cargo Desempeñado (*)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Charge)
            @Html.ValidationMessageFor(model => model.Charge)
        </div>

        <div class="editor-label">
           Fecha de Inicio del contrato (*)
        </div>
        <div id="errorStartDate" class="alert error">
        </div>

        <div class="editor-field">
            @Html.TextBoxFor(model => model.StartDate, new { id = "startDate"})
            @Html.ValidationMessageFor(model => model.StartDate)
        </div>

        <div class="editor-label">
           Fecha de Finalización o retiro del cargo (*)
        </div>
        <div id="errorendDate" class="alert error">
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.EndDate, new { id = "endDate"})
            @Html.ValidationMessageFor(model => model.EndDate)
        </div>

        <script type="text/javascript">
            $(document).ready(function () {
                $("#endDate").datepicker({ dateFormat: 'dd/mm/yy' }); ;
                $("#startDate").datepicker({ dateFormat: 'dd/mm/yy' }); ;
                $("#endDate").change(function () {
                    var errorDate = false;
                    var startDt = $("#startDate").val();
                    var endDt = $("#endDate").val();
                    var aI = startDt.substring(6, 10);
                    var aF = endDt.substring(6, 10);
                    if (aI <= aF) {
                        var mI = startDt.substring(3, 5);
                        var mF = endDt.substring(3, 5);
                        if (mI <= mF) {
                            var dI = startDt.substring(0, 2);
                            var dF = endDt.substring(0, 2);
                            if (dI > dF) {
                                //                                $('<p>').text('La fecha de finalizacion debe ser posterior a la fecha de inicio').appendTo('#errorendDate').hide(20000, function () { $(this).remove(); });
                                //                                $("#endDate").val("");
                                errorDate = true;
                            }
                        } else {
                            //                            $('<p>').text('La fecha de finalizacion debe ser posterior a la fecha de inicio').appendTo('#errorendDate').hide(20000, function () { $(this).remove(); });
                            //                            $("#endDate").val("");
                            errorDate = true;
                        }
                    } else {
                        //                        $('<p>').text('La fecha de finalizacion debe ser posterior a la fecha de inicio').appendTo('#errorendDate').hide(20000, function () { $(this).remove(); });
                        //                        $("#endDate").val("");
                        errorDate = true;
                    }

                    if (errorDate) {
                        $('<p>').text('La fecha de finalizacion debe ser posterior a la fecha de inicio').appendTo('#errorendDate').hide(20000, function () { $(this).remove(); });
                        $("#endDate").val("");
                    }
                });

                $("#startDate").change(function () {
                    var errorDate = false;
                    var startDt = $("#startDate").val();
                    var endDt = $("#endDate").val();
                    if (endDt != "") {
                        var aI = startDt.substring(6, 10);
                        var aF = endDt.substring(6, 10);
                        if (aI <= aF) {
                            var mI = startDt.substring(3, 5);
                            var mF = endDt.substring(3, 5);
                            if (mI <= mF) {
                                var dI = startDt.substring(0, 2);
                                var dF = endDt.substring(0, 2);
                                if (dI > dF) {
                                    //                                    $('<p>').text('La fecha de inicio debe ser anterior a la fecha de finalizacion').appendTo('#errorStartDate').hide(20000, function () { $(this).remove(); });
                                    //                                    $("#startDate").val("");
                                    errorDate = true;
                                }
                            } else {
                                //                                $('<p>').text('La fecha  de inicio debe ser posterior a la fecha de finalizacion').appendTo('#errorStartDate').hide(20000, function () { $(this).remove(); });
                                //                                $("#startDate").val("");
                                errorDate = true;
                            }
                        } else {
                            //                            $('<p>').text('La fecha de inicio debe ser posterior a la fecha de finalizacion').appendTo('#errorStartDate').hide(20000, function () { $(this).remove(); });
                            //                            $("#startDate").val("");
                            errorDate = true;
                        }

                        if (errorDate) {
                            $('<p>').text('La fecha de inicio debe ser posterior a la fecha de finalizacion').appendTo('#errorStartDate').hide(20000, function () { $(this).remove(); });
                            $("#startDate").val("");
                        }
                    }
                });

            });
        </script>
               
        <div class="editor-label">
            Decripcion de la labor desempeñada (*)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Description, htmlAttributes: new { rows = "5%", cols = "45%" })
            @Html.ValidationMessageFor(model => model.Description)
        </div>   
        <br/>     
        <p>
             <input type="submit" value="Crear" class="ebutton blue" />&nbsp
             @Html.ActionLink("Volver a la lista", "Index", new { wizardStep= wizard}, htmlAttributes: new { @class = "ebutton blue" })
        </p>
    </fieldset>
}


