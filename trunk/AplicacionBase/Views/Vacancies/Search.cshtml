@model PagedList.IPagedList<AplicacionBase.Models.Vacancy>

@{
    ViewBag.Title = "Búsqueda de Vacantes";
}



<h1>Resultados de la Búsqueda para "@ViewBag.CurrentFilter" </h1> 
<form method="get" action="/Vacancies/Search">
    <fieldset>
        
        <div class="editor-field">
         
            Usar otras palabras clave: @Html.TextBox("criteria", ViewBag.CurrentFilter as string)
            &nbsp<input type="submit" value="Buscar" class="ebutton blue" />   
        </div>
            
    </fieldset>
</form>


@if (Model.Count() != 0)
{
 

    foreach (var item in Model)
    {
        <div class="vacancy">
            <h2 class="title">Cargo: @Html.DisplayFor(modelItem => item.Charge)</h2>
            <p class="meta"><small>Publicada por @Html.DisplayFor(modelItem => item.User.FirstNames)
            @Html.DisplayFor(modelItem => item.User.LastNames) el   @Html.DisplayFor(modelItem => item.PublicationDate)</small><br />
            
            <div>         
                <p>@Html.DisplayFor(modelItem => item.Description)</p>
                <p>Esta vacante cierra el @Html.DisplayFor(modelItem => item.ClosingDate)</p>  
                @Html.ActionLink("Detalles", "Details", new { id = item.Id }, htmlAttributes: new { @class = "ebutton blue" }) 
                &nbsp
                @Html.ActionLink("Editar", "Edit", new { id = item.Id }, htmlAttributes: new { @class = "ebutton blue" })
                &nbsp
                @Html.ActionLink("Eliminar", "Delete", new { id = item.Id }, htmlAttributes: new { @class = "ebutton blue" })
            </div>
        </div>
    }

 
    
    <div>
    Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
    de @Model.PageCount
     
    @if (Model.HasPreviousPage)
    {
        @Html.ActionLink("<<", "Search", new { criteria = ViewBag.CurrentFilter, page = 1 })
        @Html.Raw(" ");
        @Html.ActionLink("< Prev", "Search", new { criteria = ViewBag.CurrentFilter, page = Model.PageNumber - 1 })
    }
    else
    {
        @:<<
        @Html.Raw("   ");
        @:< Prev
    }
     
    @if (Model.HasNextPage)
    {
        @Html.ActionLink("Next>", "Search", new { criteria = ViewBag.CurrentFilter, page = Model.PageNumber + 1 })
        @Html.Raw(" ");
        @Html.ActionLink(">>", "Search", new { criteria = ViewBag.CurrentFilter, page = Model.PageCount })
    }
    else
    {
        @:Next >
        @Html.Raw(" ")
        @:>>
    }
    </div>
    
}

@if (Model.Count() == 0)
{
    <p>No hay coincidencias</p>
}
<br/>


<p>    
    @Html.ActionLink("Regresar al Listado", "Index", null, htmlAttributes: new { @class = "ebutton blue" })
</p>